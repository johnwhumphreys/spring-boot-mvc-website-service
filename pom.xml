<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.john.humphreys</groupId>
  <artifactId>spring-boot-website-initd-service</artifactId>
  <packaging>jar</packaging>

  <version>1.0-SNAPSHOT</version>
  <name>spring-boot-website-initd-service Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <!-- Spring-boot parent POM.  Provides a base for spring-boot projects and
       automatically selects the versions of all spring-dependencies you will
       use in the project.  So, for all other dependencies on spring, leave
       out the version and this will automatically fill it in for you. -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.2.RELEASE</version>
  </parent>

  <properties>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>

    <!-- Spring-boot extension dependency for using spring-MVC. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Spring-boot extension dependency for using the "actuator" production
         services which include the management endpoint and its significant
         monitoring facilities. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Spring boot dependency to add RESTFUL end-points.  This will make the
         actuator base-URL browse-able/list-able so you can see all the available
         services it provides by hitting the base URL. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>spring-boot-website-initd-service</finalName>
    <plugins>

      <!-- Use spring boot plugin to build uber-jar and to provide maven
           goals for running the sprint boot app (spring-boot:run). -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!-- Make this a fully executable JAR, embedding an init.d
               supporting script in front of it. If a "<JAR_NAME>.conf"
               file is present next to the JAR, it will be executed
               in advance letting you source variables and similar things
               to be used during execution.  This lets you set things
               like an external property file and logging file location. -->
          <executable>true</executable>
        </configuration>
      </plugin>

      <!-- Exclude the properties file from the JAR we build as we cannot
           re-configure the application if this file is embedded in the JAR
           and therefore unchangeable.  Assuming we deploy this on a server
           using the "executable=true" above to embed an init.d script, when
           the uber-JAR runs, it will automatically look for a file right
           next to it called "JAR_NAME.conf" (same name as the JAR with a
           different extension).  That file can specify the location of the
           properties file you are using instead, among other things. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <excludes>
            <exclude>application.properties</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
